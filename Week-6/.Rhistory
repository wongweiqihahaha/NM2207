knitr::opts_chunk$set(echo = TRUE)
for (x in c(3, 6, 9)) { print(x)
}
for (x in c(3, 6, 9)) { print(x)
}
for (x in 1:8) {print(x)}
for (x in 1:8) {print(x)}
{y <- seq(from=100,to=200,by=5) print(y[x])}
styler:::style_selection()
{y <- seq(from=100,to=200,by=5) print(y[x])}
{y <- seq(from=100,to=200,by=5) print(y[x])}
for (x in 1:8)
{y <- seq(from=100,to=200,by=5)
print(y[x])}
for (x in 1:8)
{y <- seq(from=100,to=200,by=5)
print(y[x])}
sample_sizes <- c(5, 10, 15, 20, 25000)
for (i in seq_along(sample_sizes)) { sample_means[i] <- mean(rnorm(sample_sizes[i]))
}
sample_means
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) { sample_means[i] <- mean(rnorm(sample_sizes[i]))
}
sample_means
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5) # Example 2 for data_type=double
sample_means <- double(5)
# Example 3 for data_type=double
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5)
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5)
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5)
sample_means <- double(5)
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5)
sample_means <- double(5)
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
sample_means <- vector("double", length = 5)
sample_means <- double(5)
sample_means <- rep(0, length(sample_sizes))
data_list <- vector("list", length = 5)
data_list <- vector("list", length = 5)
print(data_list)
data_list <- vector("list", length = 5)
print(data_list)
sample_means <- vector("double", length = 5)
sample_means <- double(5)
sample_means <- rep(0, length(sample_sizes))
a <- 7:11
b <- 8:12
out <- rep(0L, 5)
for (i in seq_along(a)) {
out[i] <- a[i] + b[i]
}
out
a <- 7:11
b <- 8:12
out <- a + b out
a <- 7:11
b <- 8:12
out <- a + b
out
sample_sizes <- c(5, 10, 15, 20, 25000)
# Create a functional- function inside a function sample_summary <- function(sample_sizes, fun) {
# Initialise a vector of the same size as sample_sizes
out <- vector("double", length(sample_sizes))
# Run the for loop for as long as the length of sample_sizes for (i in seq_along(sample_sizes)) {
# Perform operations indicated fun
out[i] <- fun(rnorm(sample_sizes[i]))
sample_sizes <- c(5, 10, 15, 20, 25000)
# Create a functional- function inside a function
sample_summary <- function(sample_sizes, fun) {
# Initialise a vector of the same size as sample_sizes
out <- vector("double", length(sample_sizes))
# Run the for loop for as long as the length of sample_sizes
for (i in seq_along(sample_sizes)) {
# Perform operations indicated fun
out[i] <- fun(rnorm(sample_sizes[i]))
}
return(out) }
# Slide 24
sample_summary(sample_sizes,mean)
sample_summary(sample_sizes,median)
sample_summary(sample_sizes,sd)
for(i in 1:5){ print(i)
}
i <- 1
while (i <= 5) {
# body
print(i)
i <- i + 1 }
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
product_info %>%
select(product_info$category) %>%
filter(product_info$category == "Electronics")
setwd("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/NM2207/Week-6")
knitr::opts_chunk$set(echo = TRUE)
gap_reminder <- read_csv(gapreminder.csv)
gap_reminder <- read_csv('gapreminder.csv')
library(readr)
gapminder <- read_csv("gapminder.csv")
View(gapminder)
gap_reminder <- read_csv('gapreminder.csv')
gap_reminder <- read_csv('gapreminder.csv')
setwd("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/NM2207/Week-6")
gap_reminder <- read_csv('gapreminder.csv')
gap_reminder <- read.csv('gapreminder.csv')
gap_reminder <- read.csv('gapreminder.csv')
gap_reminder <- read_csv('gapminder.csv')
gap_minder <- read_csv('gapminder.csv')
gap_minder %>%
select(columns, country, continent and year )
gap_minder %>%
select(columns, country, continent,year )
gap_minder %>%
select(country, continent,year )
gap_minder %>%
select(country, count())
gap_minder %>%
select(country) %>%
arrange(count())
gap_minder %>%
select(country) %>%
arrange(count(country))
gap_minder %>%
count(country)
gap_minder %>%
select(country == "Singapore")
gap_minder %>%
select(country == "Singapore")
gap_minder %>%
select(country, country == "Singapore")
gap_minder %>%
filter(country == "Singapore")
select(country,gdpPercap)
select(country,gdpPercap)
gap_minder %>%
filter(country == "Singapore") %>%
select(country,gdpPercap)
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc())
gap_minder %>%
filter(country == "Singapore") %>%
arrange()
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc(gdpPercap))
summerise(mean(lifeExp))
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc(gdpPercap))
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc(gdpPercap)) %>%
summerise(mean(lifeExp))
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc(gdpPercap)) %>%
summarise(mean(lifeExp))
gap_minder %>%
filter(country == "Singapore") %>%
arrange(desc(gdpPercap))
subset(gap_minder, year %in% 1952:2007)
subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
year_range <- subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
year_range <- subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
year_range <- gap_minder[gap_minder$year >= 1952 & Salaries$yearID <=2007, ]
year_range <- gap_minder[gap_minder$year >= 1952 & gap_minder$year <=2007, ]
year_range <- gap_minder[gap_minder$year >= 1952 & gap_minder$year <=2007]
subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
year_ramge <- subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
print(year_range)
year_ramge <- subset(gap_minder, year %in% 1952:2007) %>%
filter(country == "Singapore")
print(year_range)
year_ramge <- subset(gap_minder, year %in% 1952:2007,country == "Singapore")
year_ramge <- subset(gap_minder, year %in% 1952:2007,country == "Singapore")
year_range
ggplot(gap_minder) +
aes(x=year_range,y=pop) +
geom_point() +
labs(x=" Year 1952 to 2007 (cm)",
y= "Population",
title="Population vs Year")
year_range
year_range <- subset(gap_minder, year %in% 1952:2007 & country %in% "Singapore")
year_range
ggplot(gap_minder) +
aes(x=year_range,y=pop) +
geom_point() +
labs(x=" Year 1952 to 2007 (cm)",
y= "Population",
title="Population vs Year")
ggplot(year_range) +
aes(x=year,y=pop) +
geom_point() +
labs(x=" Year 1952 to 2007 (cm)",
y= "Population",
title="Population vs Year")
print_updated_value()
print_updated_value <- function(x,y='100'){
# Printing sum
print(x+y)
}
print_updated_value()
print_updated_value(3)
print_updated_value(3)
print_updated_value(3)
print_updated_value <- function(x,y=100){
# Printing sum
as.numeric(x+y)
print(x+y)
}
print_updated_value(3)
function_inside_function(50)
function_inside_function<-function(multiplier){
return(multiplier*value)
}
multiply <- function(value){
function_inside_function<-function(multiplier){
return(multiplier*value)
}
return(function_inside_function(10))
}
function_inside_function(50)
function_inside_function<-function(multiplier){
return(multiplier*value)
}
}
multiply <- function(value){
function_inside_function<-function(multiplier){
return(multiplier*value)
}
return(function_inside_function(10))
}
function_inside_function(50)
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names)
name_length <- nchar()
country_name_length <- function(country_names) {
name_length <- nchar()
}
country_name_length <- function(country_names) {
name_length <- nchar(sentence)
}
country_name_length <- function(country_names) {
name_length <- length(country_names)
}
country_name_length <- function(country_names) {
name_length <- length(country_names)
print(name_length)
}
country_name_length(country_names)
country_name_length(country_names)
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(country_names)
dtf <- country_name_length(country_names)
dtf %>%
select(name_length > 8)
dtf %>%
select(as.numeric(name_length > 8))
dtf %>%
filter(as.numeric(name_length > 8))
filter((name_length > 8)
filter((name_length > 8)
dtf <- country_name_length(country_names)
dtf <- country_name_length(name_length)
knitr::opts_chunk$set(echo = TRUE)
student_name = c('Alice', 'Bob','Catherine')
student_score = c('85','92','78')
pass_fail = c(TRUE,TRUE,FALSE)
student_info = list(student_name, student_score, pass_fail)
print(student_info)
vector_new <- c(85, 90.5, '75.2')
vector_new <- as.numeric(vector_new)
print(mean(vector_new))
student_name = c('Alice', 'Bob','Catherine')
student_score = c(85,92,78)
pass_fail = c(TRUE,TRUE,FALSE)
student_info = list(name = student_name, score = student_score, pf = pass_fail)
student_info$score[which(student_info$name == "Bob")]
age_vector <- c(1,30,21,44,55)
age_vector[age_vector>=30]
print(age_vector)
fruits <- c("apple", "banana", "kiwi", "strawberry", "orange", "pineapple")
long_names <- fruits[nchar(fruits) > 6]
print(long_names)
fruits[long_names == TRUE]
dtf[name_length > 8]
dtf <- country_name_length(name_length)
dtf[name_length > 8]
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
dtf[name_length > 8]
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
dtf <- country_name_length(name_length)
dtf[country$name_length > 8]
dtf[country_names$name_length > 8]
dtf <- country_name_length(name_length)
dtf[country_names$name_length > 8]
dtf[country_names$as.numeric(name_length) > 8]
dtf[country_names$name_length > 8]
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
dtf <- country_name_length(name_length)
dtf[country_names$name_length > 8]
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
dtf <- country_name_length(name_length)
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(name_length)
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(name_length)
country_name_length(country_names)
country_name_length(country_names>8)
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(country_names>8)
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(country_names>8)
# Definition of function
country_names <- c('Singapore', 'Thailand', 'Malaysia', 'Europe', 'Germany')
country_names
country_name_length <- function(country_names) {
name_length <- nchar(country_names)
print(name_length)
}
country_name_length(country_names > 8)
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
countdown_to_blastoff <- function() {
countdown <- 10
while (countdown > 0) {
cat(countdown, "... ", sep = "")
Sys.sleep(1)  # Delay for 1 second
countdown <- countdown - 1
}
cat("Blastoff!\n")
}
# Call the function to start the countdown
countdown_to_blastoff()
knitr::include_graphics("images/countdown.png")
cat("Reversed word:", reversedWord, "\n")
# Function to reverse a word using a while loop
reverseWord <- function(word) {
reversed <- ""
len <- nchar(word)
i <- len
while (i > 0) {
char <- substr(word, i, i)
reversed <- paste(reversed, char, sep = "")
i <- i - 1
}
return(reversed)
}
# Get user input
word <- readline("Enter a word: ")
knitr::opts_chunk$set(echo = TRUE)
for (x in c(2,3,4)) {
print(x)
}
styler:::style_selection()
